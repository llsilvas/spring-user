server:
  port: 8091
spring:
  application:
    name: spring-user
  cloud:
    config:
      enabled: false
  config:
    import: optional:configserver:http://${SPRING_CONFIG_SERVER:localhost}:8888 # URL do Config Server

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${KEYCLOAK_URL:localhost:8443}/realms/event-management/protocol/openid-connect/certs
          issuer-uri: http://${KEYCLOAK_URL:localhost:8443}/realms/event-management


  # Configurações para o Keycloak Admin API
  keycloak:
    admin:
      client-id: user-service-admin
      client-secret: wcQ65Sna3z7xmXmDz5dUdZNdm9GIy8xL
      auth-server-url: http://localhost:8443
      realm: event-management

#logging:
#  level:
#    web: debug
#otel:
#  traces:
#    exporter: otlp
#    sampler: always_on  # opcional
#  exporter:
#    otlp:
#      endpoint: http://tempo:9095

#
management:
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            request: true
  observations:
    key-values:
      application: spring-user

  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus, info

#otel:
#  metrics:
#    exporter: none
#  traces:
#    exporter: otlp
#    sampler:
#      always_on
#  exporter:
#    otlp:
#      endpoint: http://localhost:3200
#      logs:
#        protocol: http/protobuf
#
#logging:
#  level:
#    io.opentelemetry: DEBUG

otel:

  logs:
    exporter: none
  traces:
    exporter: none
  metrics:
    exporter: none
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.boot: INFO
    com.github.loki4j.logback: INFO
    org.springframework.security: INFO
    org.springframework.cloud.bus: INFO
    org.springframework.cloud: DEBUG
    org.springframework.cloud.config: DEBUG
